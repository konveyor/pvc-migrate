apiVersion: v1
kind: Pod
metadata:
  name: {{ pod_name }}
  namespace: {{ pvc_namespace }}
  labels:
    app: {{ pod_name }}
    purpose: rsync
    owner: pvc-migrate
spec:
  volumes:
{% for pvc in pvcs %}
  - name: {{ pvc.pvc_vol_safe_name }}
    persistentVolumeClaim:
      claimName: {{ pvc.pvc_name }}
{% endfor %}
  containers:
  - name: rsync
    resources:
      limits:
        cpu: {{ transfer_pod_cpu_limits }}
        memory: {{ transfer_pod_mem_limits }}
      requests:
        cpu: {{ transfer_pod_cpu_requests }}
        memory: {{ transfer_pod_mem_requests }}
    imagePullPolicy: Always
    image: {{ transfer_pod_image }}
    ports:
    - containerPort: 22
      name: ssh
      protocol: TCP
    volumeMounts:
{% for pvc in pvcs %}
    - mountPath: "/mnt/{{ pvc_namespace }}/{{ pvc.pvc_vol_safe_name }}"
      name: {{ pvc.pvc_vol_safe_name }}
{% endfor %}
    securityContext:
      privileged: true
      runAsUser: 0
    env:
    - name: SSH_PUBLIC_KEY
      value: "{{ ssh_public_key['content'] | b64decode }}"
  - name: stunnel
    imagePullPolicy: Always
    image: {{ transfer_pod_image }}
    ports:
      - containerPort: 2222
        name: stunnel
        protocol: TCP
    securityContext:
      privileged: true
      runAsUser: 0
    env:
      - name: crt
        value: "{{ stunnel_crt['content'] }}"
      - name: key
        value: "{{ stunnel_key['content'] }}"
    command:
      - bash
      - -c
      - "echo $crt|base64 -d > /etc/stunnel/tls.crt && echo $key|base64 -d > /etc/stunnel/tls.key && exec /bin/stunnel /etc/stunnel/stunnel.conf"
